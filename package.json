{
  "repository": {
    "type": "git",
    "url": "https://github.com/mediaprophet/vs-code-agent-collab.git"
  },
  "name": "copilot-automator-grok-gpt",
  "displayName": "Copilot Automator GROK + GPT Build",
  "description": "An extension to automate interactions with GitHub Copilot using a local LLM.",
  "version": "0.0.3",
  "publisher": "mediaprophet",
  "engines": {
    "vscode": "^1.94.0"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "AI"
  ],
  "main": "./out/extension.js",
  "icon": "images/robot-icon.png",
  "license": "MIT",
  "author": "Timothy Holborn",
  "contributes": {
    "commands": [
      {
        "command": "copilot-automator.start",
        "title": "Copilot Automator: Start Agent Cooperation"
      },
      {
        "command": "copilot-automator.pause",
        "title": "Copilot Automator: Pause Agent Cooperation"
      },
      {
        "command": "copilot-automator.openLocalChat",
        "title": "Copilot Automator: Chat with Local Model"
      },
      {
        "command": "copilot-automator.resume",
        "title": "Copilot Automator: Resume Agent Cooperation"
      },
      {
        "command": "copilot-automator.stop",
        "title": "Copilot Automator: Stop Agent Cooperation"
      },
      {
        "command": "copilot-automator.openSettings",
        "title": "Copilot Automator: Open Settings Panel"
      },
      {
        "command": "copilot-automator.selectFiles",
        "title": "Copilot Automator: Select Files for LLM Review"
      },
      {
        "command": "copilot-automator.manageSpecResources",
        "title": "Copilot Automator: Manage Specification Resources"
      },
      {
        "command": "copilot-automator.createTemplateInstruction",
        "title": "Copilot Automator: Create Instruction Template"
      },
      {
        "command": "copilot-automator.validateInstructions",
        "title": "Copilot Automator: Validate Instruction Files"
      },
      {
        "command": "copilot-automator.runInstructionFile",
        "title": "Copilot Automator: Run Instruction File"
      },
      {
        "command": "copilot-automator.openLogViewer",
        "title": "Copilot Automator: View Logs"
      },
      {
        "command": "copilot-automator.refreshModels",
        "title": "Copilot Automator: Refresh LLM Models"
      },
      {
        "command": "copilot-automator.selectModel",
        "title": "Copilot Automator: Select LLM Model"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "copilotAutomatorActivityBar",
          "title": "Copilot Automator",
          "icon": "images/robot-icon.svg"
        }
      ]
    },
    "views": {
      "copilotAutomatorActivityBar": [
        {
          "id": "copilotAutomatorPanel",
          "name": "Automator Panel",
          "type": "webview",
          "icon": "images/robot-icon.png"
        },
        {
          "id": "copilotAutomatorModels",
          "name": "Available LLM Models",
          "icon": "images/robot-icon.png"
        },
        {
          "id": "copilotAutomatorHistory",
          "name": "Automation History / Logs",
          "icon": "images/robot-icon.png"
        },
        {
          "id": "copilotAutomatorCommands",
          "name": "Available Commands",
          "icon": "images/robot-icon.png"
        },
        {
          "id": "copilotAutomatorLocalChat",
          "name": "Chat with Local Model",
          "type": "webview",
          "icon": "images/robot-icon.png"
        }
      ]
    },
    "activationEvents": [
      "onView:copilotAutomatorPanel",
      "onView:copilotAutomatorModels",
      "onView:copilotAutomatorHistory",
      "onView:copilotAutomatorCommands",
      "onView:copilotAutomatorLocalChat",
      "onCommand:copilot-automator.openLocalChat",
      "onCommand:copilot-automator.start",
      "onCommand:copilot-automator.pause",
      "onCommand:copilot-automator.resume",
      "onCommand:copilot-automator.stop",
      "onCommand:copilot-automator.openSettings",
      "onCommand:copilot-automator.selectFiles",
      "onCommand:copilot-automator.manageSpecResources",
      "onCommand:copilot-automator.createTemplateInstruction",
      "onCommand:copilot-automator.validateInstructions",
      "onCommand:copilot-automator.runInstructionFile",
      "onCommand:copilot-automator.openLogViewer",
      "onCommand:copilot-automator.refreshModels",
      "onCommand:copilot-automator.selectModel"
    ],
     "chatParticipants": [
      {
        "id": "copilot-automator.chat",
        "name": "Copilot-Automator-Chat"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts --fix",
    "test": "node ./out/test/runTest.js",
    "test:unit": "node ./out/test/unitTest.js"
  },
  "devDependencies": {
    "@types/node": "^22.16.5",
    "@types/vscode": "^1.94.0",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.12.0",
    "tailwindcss": "^3.4.14",
    "typescript": "^5.6.2"
  },
  "dependencies": {
    "@lmstudio/sdk": "^1.4.0",
    "@vscode/prompt-tsx": "^0.4.0-alpha.5",
    "axios": "^1.11.0",
    "glob": "^11.0.0"
  }
}
